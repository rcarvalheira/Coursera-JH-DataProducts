geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
theme(legend.positio n = "right")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
theme(legend.positio n="right")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
theme(legend.position="right")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
geom_text(aes(x=sMu, label="Sample Mean", y=sMu), colour="red", angle=90, text=element_text(size=11)) +
geom_text(aes(x=tMu, label="\nTheoretical Mean", y=20), colour="blue", angle=90, text=element_text(size=11))
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
geom_text(aes(x=sMu, label="Sample Mean/n", y=sMu), colour="red", angle=90, text=element_text(size=5)) +
geom_text(aes(x=tMu, label="\nTheoretical Mean", y=20), colour="blue", angle=90, text=element_text(size=5))
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red") +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
geom_text(aes(x=sMu, label="Sample Mean\n", y=sMu), colour="red", angle=90, text=element_text(size=5)) +
geom_text(aes(x=tMu, label="\nTheoretical Mean", y=20), colour="blue", angle=90, text=element_text(size=5))
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show_guide = TRUE) +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
#2
var(xpd) # Sample Variance
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
#2
var(xpd) # Sample Variance
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution")
ggplot(xpd, aes(xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution")
ggplot(xpd, aes(x=xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution")
ggplot(xpd, aes(x=xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
ggplot(xpd, aes(x=xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "sample mean",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "theoretical mean",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_color_manual(name = "statistics", values = c("sample mean" = "blue", "theoretical mean" = "red"))
ggplot(xpd, aes(x=xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
guides(fill = guide_legend(keywidth = 3, keyheight = 1))
ggplot(xpd, aes(x=xpd[,x])) +
geom_histogram(fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_colour_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values")) +
scale_fill_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values"))
ggplot() +
geom_histogram(xpd, aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_colour_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values")) +
scale_fill_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_colour_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values")) +
scale_fill_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "r",show.legend = TRUE) +
geom_vline(xintercept = tMu, color = "b",show.legend = TRUE) +
labs( x = "Sample Distribution") +
scale_colour_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values")) +
scale_fill_manual(name="group", values=c("r" = "red", "b"="blue"), labels=c("b"="blue values", "r"="red values"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE, title = "Sample mean") +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution")
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(xintercept = sMu, color = "red",show.legend = TRUE, title = "Sample mean") +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
stat_function(aes(colour = "Normal"), fun = dnorm, args = list(mean = 0.3, sd = 1)) +
scale_colour_manual("Legend title", values = c("black", "red"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "red")) +
geom_vline(xintercept = tMu, color = "blue",show.legend = TRUE) +
labs( x = "Sample Distribution") +
stat_function(aes(colour = "Normal"), fun = dnorm, args = list(mean = 0.3, sd = 1)) +
scale_colour_manual("Legend title", values = c("red", "blue"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "red")) +
geom_vline(aes(xintercept = tMu, color = "blue") +
labs( x = "Sample Distribution") +
scale_colour_manual("Legend title", values = c("red", "blue"))
#2
var(xpd) # Sample Variance
#sigma^2/n
sigma <- mu
sigma^2/n #Variance
#3
xpd <- data.table(xpd)
plot <- data.table(cbind(xpd, random_xp))
ggplot(xpd, aes(x = xpd))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = mu,sd = sigma/sqrt(n)), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
scale_fill_discrete(breaks = c("Sample Means", "Normal", "Random Exponential", "Mean")
,labels = c("Sample Means", "Normal", "Random Exponential", "Mean"))
# the central limit theorem (CLT) establishes that, for the most commonly studied scenarios,
# when independent random variables are added, their sum tends toward a normal distribution
# (commonly known as a bell curve) even if the original variables themselves are not normally
# distributed.
######################
xd = NULL
for (i in 1 : 1000) xd = cbind(xd, cumsum(mean(rexp(n, lambda)))/(1:n))
xd <- cbind(xd,1:length(xd))
xd <- data.table(xd)
qqplot(mean(xd),1:ncol(xd))
hist(xd)
qqplot(x = V1,y = V2, data = xd)
ggplot(xd,aes(V2,V1))+
geom_line()
qqplot(seq_along(xd),xd) +
geom_hline(aes(5))
install.packages("UsingR")
library(UsingR)
data("diamonds")
library(ggplot2)
###2 Basic inferential data analysis
# Now in the second portion of the project, we're going to analyze the ToothGrowth data in the R datasets package.
#
# Load the ToothGrowth data and perform some basic exploratory data analyses
# Provide a basic summary of the data.
# Use confidence intervals and/or hypothesis tests to compare tooth growth by supp and dose.
#(Only use the techniques from class, even if there's other approaches worth considering)
# State your conclusions and the assumptions needed for your conclusions.
#loading
tg <- data.table(ToothGrowth)
#initial look
summary(tg)
str(tg)
tg[,dose:=as.factor(dose)]
qplot(x=dose,y=len,fill=dose,data=tg, geom="boxplot") +
facet_grid(.~supp)+
ggtitle("Overview of Len")
#Breaking the set to see distribution lines
t.test(len~supp, data=tg, paired = FALSE)
oj.5 <- data.table(tg[dose == "0.5" & supp == "OJ",len])
oj1 <- data.table(tg[dose == "1" & supp == "OJ",len])
oj2 <- data.table(tg[dose == "2" & supp == "OJ",len])
vc.5 <- data.table(tg[dose == "0.5" & supp == "VC",len])
vc1 <- data.table(tg[dose == "1" & supp == "VC",len])
vc2 <- data.table(tg[dose == "2" & supp == "VC",len])
ggplot()+
geom_density(data = oj.5, aes(x=V1), fill = "white", color="red",alpha=0.5)+
geom_density(data = oj1, aes(x=V1), fill = "lightgreen", color="red",alpha=0.5)+
geom_density(data = oj2, aes(x=V1), fill = "orange", color="red",alpha=0.5)+
geom_density(data = vc.5, aes(x=V1), fill = "white", color="blue",alpha=0.5)+
geom_density(data = vc1, aes(x=V1), fill = "lightgreen", color="blue",alpha=0.5)+
geom_density(data = vc2, aes(x=V1), fill = "orange", color="blue",alpha=0.5)
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "red")) +
geom_vline(aes(xintercept = tMu, color = "blue")) +
labs( x = "Sample Distribution") +
scale_colour_manual("Legend title", values = c("red", "blue"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "sample mean")) +
geom_vline(aes(xintercept = tMu, color = "theoretical mean")) +
labs( x = "Sample Distribution") +
scale_colour_manual("Legend title", values = c("blue", "red"))
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "sample mean")) +
geom_vline(aes(xintercept = tMu, color = "theoretical mean")) +
labs( x = "Sample Distribution") +
scale_colour_manual("Means", values = c("blue", "red"))
var(xpd) # Sample Variance
sigma <- mu
sigma <- tMu
sigma^2/n #Variance
xpd <- data.table(xpd)
plot <- data.table(cbind(xpd, random_xp))
ggplot(xpd, aes(x = xpd))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = mu,sd = sigma/sqrt(n)), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), colour = "red", size=1) +
geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), colour = "red", size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)), colour = "blue", size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_fill_manual(name="Bar",values=c("black", "red", "blue", "black"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), colour = "Theoretical", size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)), colour = "Sample", size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Means", values = c("red", "blue"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), color = "Theoretical", size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)), color = "Sample", size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Means", values = c("red", "blue"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)), colour = "red", name = "Theoretical", size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)), colour = "blue", size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Means", values = c("red", "blue"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)),aes(colour = 'Theoretical'), colour = "red", size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)),aes(colour = 'Sample'), colour = "blue", size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Means", values = c("red", "blue"))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)),aes(colour = 'Theoretical'), size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)),aes(colour = 'Sample'), size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Means", values = c("red", "blue"))
xd = NULL
for (i in 1 : 1000) xd = cbind(xd, cumsum(mean(rexp(n, lambda)))/(1:n))
xd <- cbind(xd,1:length(xd))
xd <- data.table(xd)
qqplot(mean(xd),1:ncol(xd))
hist(xd)
qqplot(x = V1,y = V2, data = xd)
ggplot(xd,aes(V2,V1))+
geom_line()
qqplot(seq_along(xd),xd) +
geom_hline(aes(5))
install.packages("UsingR")
library(UsingR)
data("diamonds")
library(ggplot2)
tg <- data.table(ToothGrowth)
summary(tg)
dim(tg)
str(tg)
tg[,dose:=as.factor(dose)]
qplot(x=dose,y=len,fill=dose,data=tg, geom="boxplot") +
facet_grid(.~supp)+
ggtitle("Overview of Len")
t.test(len~supp, data=tg, paired = FALSE)
oj.5 <- data.table(tg[dose == "0.5" & supp == "OJ",len])
oj1 <- data.table(tg[dose == "1" & supp == "OJ",len])
oj2 <- data.table(tg[dose == "2" & supp == "OJ",len])
vc.5 <- data.table(tg[dose == "0.5" & supp == "VC",len])
vc1 <- data.table(tg[dose == "1" & supp == "VC",len])
vc2 <- data.table(tg[dose == "2" & supp == "VC",len])
ggplot()+
geom_density(data = oj.5, aes(x=V1), fill = "white", color="red",alpha=0.5)+
geom_density(data = oj1, aes(x=V1), fill = "lightgreen", color="red",alpha=0.5)+
geom_density(data = oj2, aes(x=V1), fill = "orange", color="red",alpha=0.5)+
geom_density(data = vc.5, aes(x=V1), fill = "white", color="blue",alpha=0.5)+
geom_density(data = vc1, aes(x=V1), fill = "lightgreen", color="blue",alpha=0.5)+
geom_density(data = vc2, aes(x=V1), fill = "orange", color="blue",alpha=0.5)
qplot(x=dose,y=len,fill=dose,data=tg, geom="boxplot")
qplot(x=dose,y=len,fill=supp,data=tg, geom="boxplot")
qplot(x=supp,y=len,fill=supp,data=tg, geom="boxplot")
dose
qplot(x=dose,y=len,fill=supp,data=tg, geom="boxplot")
qplot(x=dose,y=len,fill=dose,data=tg, geom="boxplot") +
facet_grid(.~supp)+
ggtitle("Overview of Len")
qplot(x=dose,y=len,fill=supp,data=tg, geom="boxplot")
?ToothGrowth
qplot(x=dose,y=len,fill=dose,data=tg, geom="boxplot") +
facet_grid(.~supp)+
ggtitle("Overview of Len") +
labs(x = "Vitamin C Dosage", y="Tooth Growth")
qplot(x=dose,y=len,fill=supp,data=tg, geom="boxplot")+
ggtitle("ToothGrowth data") +
labs(x = "Vitamin C Dosage", y="Teeth Length")
d.5 <- data.table(tg[dose == "0.5",len])
d1 <- data.table(tg[dose == "1",len])
d2 <- data.table(tg[dose == "2",len])
t.test(d1-d.5, paired = FALSE, var.equal = FALSE, alternative = "greater")$p.value
t.test(d2-d1, paired = FALSE, var.equal = FALSE, alternative = "greater")$p.value
t.test(d2-d1, paired = FALSE, var.equal = FALSE, alternative = "greater")
t.test(oj.5 - vc.5, paired = FALSE, var.equal = FALSE, alternative = "greater")$p.value
t.test(oj1 - vc1, paired = FALSE, var.equal = FALSE, alternative = "greater")$p.value
t.test(oj2 - vc2, paired = FALSE, var.equal = FALSE, alternative = "greater")$p.value
ggplot()+
geom_density(data = oj.5, aes(x=V1), fill = "white", color="red",alpha=0.5)+
geom_density(data = oj1, aes(x=V1), fill = "lightgreen", color="red",alpha=0.5)+
geom_density(data = oj2, aes(x=V1), fill = "orange", color="red",alpha=0.5)+
geom_density(data = vc.5, aes(x=V1), fill = "white", color="blue",alpha=0.5)+
geom_density(data = vc1, aes(x=V1), fill = "lightgreen", color="blue",alpha=0.5)+
geom_density(data = vc2, aes(x=V1), fill = "orange", color="blue",alpha=0.5)
lambda <- 0.2   #rate parameter
s <- 1000       #number of simulations
n <- 40         #number of samples
xpd <- data.table()
set.seed(66)
for (i in 1 : s) xpd = rbind(xpd, mean = mean(rexp(n, lambda)))
sMu <- mean(xpd[,x]) #sample mean
tMu <- 1/lambda  #theoretical mean
ggplot() +
geom_histogram(aes(x=xpd[,x]),fill = "white", color = "black") +
geom_vline(aes(xintercept = sMu, color = "sample mean")) +
geom_vline(aes(xintercept = tMu, color = "theoretical mean")) +
labs( x = "Sample Distribution") +
scale_colour_manual("Means", values = c("blue", "red"))
tMu^2/n #theoretical Variance
var(xpd) # Sample Variance
xpd <- data.table(xpd)
plot <- data.table(cbind(xpd, random_xp))
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)),aes(colour = 'Theoretical'), size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)),aes(colour = 'Sample'), size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Distribution", values = c("red", "blue"))
lambda <- 0.2   #rate parameter
s <- 1000       #number of simulations
n <- 40         #number of samples
xpd <- data.table()
set.seed(66)
for (i in 1 : s) xpd = rbind(xpd, mean = mean(rexp(n, lambda)))
sMu <- mean(xpd[,x]) #sample mean
tMu <- 1/lambda  #theoretical mean
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)),aes(colour = 'Theoretical'), size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)),aes(colour = 'Sample'), size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Distribution", values = c("red", "blue"))
class(xpd)
ggplot(xpd, aes(x = xpd[,mean]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white")
ggplot(xpd, aes(x = xpd[,x]))+
labs(title = "Sample means distribution vs Theoretical mean", y = "Density", x = "Distribution")+
geom_histogram(aes(y = ..density..),binwidth = 0.2, colour = "black", fill = "white") +
stat_function(fun = dnorm, args = list(mean = tMu,sd = tMu/sqrt(n)),aes(colour = 'Theoretical'), size=1) +
stat_function(fun = dnorm, args = list(mean = sMu,sd = sMu/sqrt(n)),aes(colour = 'Sample'), size=1) +
#    geom_density(colour = "blue", size=1) +
xlim(0, 10)+
geom_vline(xintercept = 5, colour = "black", size = 1)+
scale_colour_manual("Distribution", values = c("red", "blue"))
source('~/JH-Statistical-Inference-PA01-Final.R')
Sys.which("pdflatex")
Sys.which("pdflatex") <- C:\Program Files\MiKTeX 2.9\miktex\bin\x64
knit_with_parameters('~/JH-Statistical-Inference-PA01-Final-part1.rmd')
library(swirl)
swirl()
install.packages("swirlify")
library(swirlify)
shiny::runApp('GitHub/Coursera-JH-DataProducts/JH-DP-PA-Final/JH-DatProducts-PA-Final')
shiny::runApp()
cb16 <- read.csv("campeonatoBrasileiro2016.csv", sep = "," )
library(dplyr)
library(tidyr)
names(cb16) <- gsub("X","",names(cb16))
cb16N <- cb16 %>% gather(Round, Position, -Times)
cb16N$Round <- as.factor(as.numeric(cb16N$Round))
cb16 <- read.csv("campeonatoBrasileiro2016.csv", sep = "," )
cb16 <- read.csv("campeonatoBrasileiro2016.csv", sep = "," )
library(dplyr)
library(tidyr)
names(cb16) <- gsub("X","",names(cb16))
cb16N <- cb16 %>% gather(Round, Position, -Times)
cb16N$Round <- as.factor(as.numeric(cb16N$Round))
cb16N[, 2]
runApp()
runApp()
cb16 <- read.csv("campeonatoBrasileiro2016.csv", sep = "," )
library(dplyr)
library(tidyr)
names(cb16) <- gsub("X","",names(cb16))
cb16N <- cb16 %>% gather(Round, Position, -Times)
runApp()
runApp()
runApp()
runApp()
runApp()
cb16 <- read.csv("campeonatoBrasileiro2016.csv", sep = "," )
names(cb16) <- gsub("X","",names(cb16))
cb16N <- cb16 %>% gather(Round, Position, -Times)
cb16N$Round <- as.numeric(cb16N$Round)
p <- plot_ly(data=cb16N, x=~Round, y=~Position, color=~Times, type = 'scatter', mode = 'lines') %>%
layout(yaxis = list(autorange = "reversed"), hovermode = 'x')
print(p)
suppressWarnings(print(p))
runApp()
runApp()
runApp()
runApp()
runApp()
